#
# Copyright (c) 2024 The Ontario Institute for Cancer Research. All rights reserved.
#
# This program and the accompanying materials are made available under the terms of the GNU Public License v3.0.
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

###############################################################################
# Application Configurations for the Score Server
#
# This file contains various configuration profiles for the Score Server application.
# Please update the values according to your specific environment.
###############################################################################

###############################################################################
# Profile - common (default)
# This is the default profile with common settings for all environments.
###############################################################################

server:
  port: 5431  # Default port for the Score application
  compression:
    enabled: true
    mime-types: application/json
  # Allowed origins for CORS (Cross-Origin Resource Sharing), multiple values can be added, separated by commas
  cors: 
    allowedOrigins: http://localhost:8081 # Update this with your frontend application URL(s)
s3:
  # S3 connection settings
  secured: true                 # Use HTTPS for S3 connections
  sigV4Enabled: true            # Enable AWS Signature Version 4 for authentication
  upload:
    directory: upload           # Directory for temporary upload files
    expiration: 6               # Expiration time for uploads (in hours)
  data:
    directory: data             # Directory for permanent data storage
  # Uncomment below to set the customMd5Property property to use a custom MD5 hash metadata
  # customMd5Property: md5chksum
  endpoint: s3-external-1.amazonaws.com  # S3 endpoint configuration, replace with your actual S3 endpoint
  preSignedUrl:                  # Optional override for S3 pre-signed URL generation
    override:
      host:
metadata:
  useLegacyMode: false          # Set to true to use legacy metadata handling
bucket:
  name:
    object: oicr.icgc           # Bucket name for object storage (update as needed)
    state: oicr.icgc            # Bucket name for state storage (update as needed)
  size:
    pool: 0                     # Size of the connection pool
    key: 2                      # Size of the key used for encryption
object:
  sentinel: heliograph          # Sentinel value for object operations
  download:
    expiration: 1               # Expiration time for download links (in days)
upload:
  retry:
    limit: 5                    # Maximum number of retry attempts for uploads
  partsize: 20000000            # Size of each part in multipart uploads (in bytes)
  connection:
    timeout: 15000              # Connection timeout for uploads (in milliseconds)
  clean:
    cron: "0 0 0 * * ?"         # Cron expression for cleanup job (daily at midnight)
    enabled: true               # Enable or disable the cleanup job
auth:
  connection:
    maxRetries: 5               # Maximum number of connection retries
    initialBackoff: 15000       # Initial backoff time before first retry (in milliseconds)
    multiplier: 2.0             # Multiplier for subsequent backoff times
management:
  endpoints:
    web:
      cors:
        allowedOrigins: http://localhost:8081 # Update this with your management console URL(s)
spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher  # Use Ant-style path matching
logging:
  level:
    root: INFO
    org.springframework.web: INFO

---

###############################################################################
# Profile - "ssl"
# Configuration for using a self-signed certificate in production deployments
###############################################################################
spring:
  config:
    activate:
      on-profile: ssl
server:
  ssl:
    key-store-type: JKS
    key-store: src/main/cert/service.jks  # Update with your actual keystore path
    key-alias: object-store-service
    # Note: key-store-password should be specified in a separate properties file for security

---

###############################################################################
# Profile - "azure"
# Configuration for Azure blob storage
###############################################################################
spring:
  config:
    activate:
      on-profile: azure
azure:
  endpointProtocol: https
  accountName: oicricgc  # Replace with your Azure account name
  accountKey:  # Add your Azure account key here
bucket:
  name:
    object: data
  policy:
    upload: UploadPolicy
    download: DownloadPolicy
download:
  partsize: 250000000  # Part size for downloads in Azure (in bytes)

---

###############################################################################
# Profile - "s3"
# Configuration for Amazon S3 or S3-compatible storage
###############################################################################
spring:
  config:
    activate:
      on-profile: s3
s3:
  secured: false # Set to False for conductor quickstart
  endpoint: http://localhsot:9000 
  accessKey: admin 
  secretKey: admin123  #
  # masterEncryptionKeyId: your-encryption-key-id  # Uncomment for server-side encryption
  customMd5Property: md5chksum
  connectionTimeout: 1200000
  retryLimit: 5
  sigV4Enabled: true

---

###############################################################################
# Profile - "prod"
# Production environment configuration
###############################################################################
spring:
  config:
    activate:
      on-profile: prod
s3:
  secured: true
metadata:
  url: https://meta.icgc.org  # Update with your actual metadata server URL

---

###############################################################################
# Profile - "secure"
# Security configuration for OAuth2 and JWT
###############################################################################
spring:
  config:
    activate:
      on-profile: secure
  security:
    oauth2:
      resourceserver:
        jwt:
          public-key-location: "https://localhost:8180/oauth/token/public_key"  # Update with your actual OAuth server URL
          jwk-set-uri: http://keycloak:8180/realms/myrealm/protocol/openid-connect/certs  
auth:
  server:
    url: http://localhost:8180/realms/myrealm/apikey/check_api_key/ # Update with your actual OAuth server URL
    tokenName: apiToken
    clientID: dms  # Update with your actual client ID
    clientSecret: t016kqXfI648ORoIP5gepqCzqtsRjlcc  # Update with your actual client secret
    provider: keycloak  # Valid options: ego or keycloak
    keycloak:
      host: http://localhost:8180  # Update with your Keycloak host if using Keycloak
      realm: "myrealm"  # Update with your Keycloak realm if using Keycloak
    scope:
      download:
        system: score.READ
        study:
          prefix: STUDY.
          suffix: .READ
      upload:
        system: score.WRITE
        study:
          prefix: STUDY.
          suffix: .WRITE

---

###############################################################################
# Profile - "dev"
# Development environment configuration
###############################################################################
spring:
  config:
    activate:
      on-profile: dev
s3:
  secured: false
  endpoint: http://localhost:9000  # Update with your local S3 endpoint
  accessKey: admin  # Update with your local access key
  secretKey: admin123  # Update with your local secret key
server:
  port: 8087  # Development server port
bucket:
  name:
    object: object # Test bucket for object storage
    state: state  # Test bucket for state storage
upload:
  clean:
    enabled: false  # Disable cleanup in development
metadata:
  url: http://localhost:8080  # Local metadata server URL

---

###############################################################################
# Profile - "benchmark"
# Configuration for benchmarking purposes
###############################################################################
spring:
  config:
    activate:
      on-profile: benchmark
server:
  ssl:
    key-store-type: JKS
s3:
  secured: false
  endpoint:  # Add your benchmark S3 endpoint here
  